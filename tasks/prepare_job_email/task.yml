---

#
# The task will toggle the state of the environment
#

platform: linux

image_resource:
  type: docker-image
  source:
    repository: appbricks/automation-tools

inputs:
- name: automation

outputs:
- name: emails

run:
  path: /bin/bash
  args:
  - -c
  - |
    set -euo pipefail

    mc config host add auto $AUTOS3_URL $AUTOS3_ACCESS_KEY $AUTOS3_SECRET_KEY
    fly -t default login -c $CONCOURSE_URL -u ''$CONCOURSE_USER'' -p ''$CONCOURSE_PASSWORD''

    set -x

    cat <<EOF > emails/headers
    MIME-version: 1.0
    Content-Type: text/html; charset="UTF-8"
    EOF

    i=0
    emails=$(mc find auto/notifications/email-queue --name "job_email-*" --exec "echo {}" 2>/dev/null)
    for email in $emails; do
      mc cp $email emails/job_info_$i
      source emails/job_info_$i

      echo "export EMAIL_OBJECT='$email'" >> emails/job_info_$i

      if [ "$JOB_STATUS" == "failed" ]; then

        set +e

        read -r -d '' email_header << EOV
    <h1><font color="red">Automation Job Execution Failed</font></h1>
    <p>Log in to the automation Concourse UI via the command line
    utility "<code>caps-ci login</code>". Once logged in you can launch
    a browser page via the following link to navigate to the job
    execution output view.</p>

    Pipeline Job: 
    <a target="_blank" 
      href="$ATC_EXTERNAL_URL/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}">
      ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}
    </a>
    <br/><br/>
    EOV

        set +x
        job_output=$(fly -t default watch -j $BUILD_PIPELINE_NAME/$BUILD_JOB_NAME -b $BUILD_NAME \
          | sed '/^source job-info\/job_info/,/^\started bootstrap\/notifications.*/{/^#/!{/^\$/!d;};}' \
          | head -n -17)
        set -xe

        echo "$job_output=$" | terminal-to-html -preview > emails/email_body_$i.html
        sed -i -e "s|<body>|<body>$(echo $email_header | tr '\n' ' ')|" emails/email_body_$i.html
      else

        cat <<EOF > emails/email_body_$i.html
    <html>
      <body>
        <h1><font color="green">Automation Job Execution Succeeded</font></h1>
        <p>Log in to the automation Concourse UI via the command line
        utility "<code>caps-ci login</code>". Once logged in you can launch
        a browser page via the following link to navigate to the job
        execution output view.</p>

        Pipeline Job: 
        <a target="_blank" 
          href="$ATC_EXTERNAL_URL/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}">
          ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}
        </a>
      </body>
    </html>
    EOF

      fi

      cat <<EOF > emails/email_payload_$i.json
    {
      "params": {
        "headers": "emails/headers",
        "subject_text": "$SUBJECT",
        "body": "emails/email_body_$i.html"
      },
      "source": {
        "smtp": {
            "skip_ssl_validation": true,
            "host": "$SMTP_HOST",
            "port": "$SMTP_PORT",
            "anonymous": true
        },
        "from": "$EMAIL_FROM",
        "to": $(if [[ "$EMAIL_TO" == \[* ]]; then echo $EMAIL_TO; else echo "[ \"$EMAIL_TO\" ]"; fi)
      }
    }
    EOF

      i=$(($i+1))
    done

params:
  CONCOURSE_URL:
  CONCOURSE_USER:
  CONCOURSE_PASSWORD:
  AUTOS3_URL:
  AUTOS3_ACCESS_KEY:
  AUTOS3_SECRET_KEY:
  SMTP_HOST:
  SMTP_PORT:
  EMAIL_FROM:
  EMAIL_TO:
