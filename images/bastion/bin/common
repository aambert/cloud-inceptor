#!/bin/bash

function parse_yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p" $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

# This script needs to be run as root
if [[ `whoami` != "root" ]]; then 
    echo -e "\nThis script needs to be run as root.\n"
    exit 1
fi

# Load configuration
if [ ! -e "/root/config.yml" ]; then
    wget http://169.254.169.254/latest/user-data -O /root/config.yml 

    # Remove if user data is not a yaml file
    s=$(head -1 /root/config.yml)
    [[ $s != "---" ]] && rm /root/config.yml
fi
if [[ -e "/root/config.yml" ]]; then
    eval $(parse_yaml /root/config.yml "config_")
else
    exit 0
fi

hn=$(hostname)
cat /etc/hosts | grep "127.0.1.1" > /dev/null 2>&1
if [[ $? -ne 0 ]]; then
    sed -i "s|^127.0.0.1 .*$|127.0.0.1 localhost\n127.0.1.1 $hn|" /etc/hosts
fi
