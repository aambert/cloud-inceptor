#!/bin/bash

echo -e "\n**** Restarting Concourse workers ****"

CONCOURSE_HOME=/data/concourse

CONCOURSE_URL=http://$(docker ps -a | grep docker_concourse-web_1 | sed 's|.* \([0-9]*\.[0-9]*\.[0-9]*\.[0-9]:[0-9]*\)->.*|\1|')
CONCOURSE_PASSWORD=$(cat /root/bootstrap-vars.yml | awk '/concourse_password:/{ print $2 }')

i=0
curl -f -L "$CONCOURSE_URL" >/dev/null 2>&1
while [[ $? -ne 0 && $i -lt 12 ]]; do
    
    i=$(($i+1))
    echo "Waiting for Concourse to startup..."
    sleep 5

    curl -f -L "$CONCOURSE_URL" >/dev/null 2>&1
done
if [[ $? -ne 0 ]]; then 
    echo "ERROR! Concourse is still not running after 60 seconds."
    exit 1
fi

sudo -S -u concourse /bin/sh -l <<EOF
cd $CONCOURSE_HOME/docker
export CONCOURSE_EXTERNAL_URL=$CONCOURSE_URL
docker-compose down
docker-compose up -d --force-recreate
EOF

sudo su - root -c "fly -t default login -u admin -p $CONCOURSE_PASSWORD"

i=0
WORKER_STATE=$(sudo su - root -c "fly -t default workers | tail -1 | cut -d' ' -f11")
while [[ $WORKER_STATE != stalled && $i -lt 24 ]]; do
    
    i=$(($i+1))
    echo "Waiting for concourse worker to stall..."
    sleep 5

    WORKER_STATE=$(sudo su - root -c "fly -t default workers | tail -1 | cut -d' ' -f11")
done

if [[ $WORKER_STATE == stalled ]]; then
    sudo su - root -c "fly -t default prune-worker -w $(fly -t default workers | awk '/stalled/{ print $1 }')"
    echo -e "Concourse worker node has been pruned and restarted.\n"
else
    echo "No Concourse workers stalled after 2 minutes! Proceeding as normal."
fi
