#!/bin/bash

SCRIPT_HOME=$(cd $(dirname "$(ls -l $0 | awk '{ print $NF }')") && pwd)
source $SCRIPT_HOME/common

echo -e "\n============================= Network Interfaces =============================="
ip a
echo -e "=================================== Routes ===================================="
route -n
echo -e "===============================================================================\n"

set -ex

vpn_itf=$(ip a \
    | grep -B 5 "$config_server_private_ip" \
    | awk '/^[0-9]*: (eth|ens?)[0-9]:/{ print substr($2,0,length($2)-1) }')

itfs=( $(ip a | grep "^[0-9]*: " | awk '{ print substr($2,0,length($2)-1) }') )
i=0
j=51

for n in $(echo $config_server_lan_interfaces | sed "s/,/ /g"); do

    i=$(($i+1))
    itf=${itfs[$i]}
    
    ip=$(echo $n | awk -F'|' '{print $1}')
    [[ -n $ip ]] || continue

    netmask=$(echo $n | awk -F'|' '{print $2}')
    lan_subnet=$(echo $n | awk -F'|' '{print $3}')
    lan_netmask=$(echo $n | awk -F'|' '{print $4}')
    lan_gateway=$(echo $n | awk -F'|' '{print $5}')

    if [[ $itf != $vpn_itf ]]; then

        set +e

        ifdown $itf
        ip address flush dev $itf

        if [[ -n $ip ]]; then        
            # Configure a static IP

            if [[ -n lan_subnet && -n $lan_gateway ]]; then
                # Configure a static route

                cat << ---EOF > /etc/network/interfaces.d/$j-$itf.cfg
auto $itf
iface $itf inet static
    address $ip
    netmask $lan_netmask
    post-up /sbin/route add -net $lan_subnet gw $lan_gateway
    post-down /sbin/route del -net $lan_subnet
---EOF
            else
            
                cat << ---EOF > /etc/network/interfaces.d/$j-$itf.cfg
auto $itf
iface $itf inet static
    address $ip
    netmask $netmask
---EOF

            fi
        else
            # Configure DHCP

            cat << ---EOF > /etc/network/interfaces.d/$j-$itf.cfg
auto $itf
iface $itf inet dhcp
---EOF
        fi

        ifup $itf
        set -e
        
        j=$(($j+1))
    fi
done

systemctl enable docker
set +e

if [[ -n $config_server_docker_mount_path ]]; then

    i=0
    mount | grep " $config_server_docker_mount_path " >/dev/null 2>&1
    while [[ $i -lt 12 && $? -ne 0 ]]; do
        echo "Waiting for docker root mount '$config_server_docker_mount_path' to become available..."
        sleep 5
        i=$(($i+1))
        mount | grep " $config_server_docker_mount_path " >/dev/null 2>&1
    done
    if [[ $i -lt 12 ]]; then
        echo "Changing docker root path to '$config_server_docker_mount_path'."

        systemctl stop docker

        mkdir -p /etc/systemd/system/docker.service.d
        cat << ---EOF > /etc/systemd/system/docker.service.d/docker.root.conf
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd --data-root $config_server_docker_mount_path/docker -H fd://
---EOF

        systemctl daemon-reload
    else
        echo "Timed out waiting for docker root mount path to become available. No changes will be made to docker root path."
    fi
fi

set -e
systemctl restart docker

set +ex

touch /root/.network_installed
