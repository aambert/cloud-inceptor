#!/bin/bash
SCRIPT_HOME=$(cd $(dirname "$(ls -l $0 | awk '{ print $NF }')") && pwd)
source $SCRIPT_HOME/common

if [[ -z $config_concourse_port ]]; then
    echo "Skipping Concourse setup as no Concourse configuration found."
    exit 0
fi

CONCOURSE_HOME=/data/concourse

rm -fr $CONCOURSE_HOME
userdel concourse >/dev/null 2>&1
useradd concourse -p $(openssl rand -base64 32) -d /opt/concourse -G docker

mkdir -p \
    $CONCOURSE_HOME/docker \
    $CONCOURSE_HOME/objectstore \
    $CONCOURSE_HOME/keys/web \
    $CONCOURSE_HOME/keys/worker

autos3_access_key=$(head /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 20 ; echo '')
autos3_secret_key=$(head /dev/urandom | tr -dc 'A-Za-z0-9' | head -c 20 ; echo '')

cat << ---EOF > $CONCOURSE_HOME/docker/docker-compose.yml
---
version: '3'

services:

  #
  # Concourse services
  #

  concourse-db:
    image: postgres:9.6
    restart: unless-stopped
    environment:
      POSTGRES_DB: concourse
      POSTGRES_USER: concourse
      POSTGRES_PASSWORD: changeme
      PGDATA: /database

  concourse-web:
    image: concourse/concourse
    links: [concourse-db]
    command: web
    ports: ["$config_concourse_port:8080"]
    volumes: ["$CONCOURSE_HOME/keys/web:/concourse-keys"]
    restart: unless-stopped
    environment:
      CONCOURSE_BASIC_AUTH_USERNAME: admin
      CONCOURSE_BASIC_AUTH_PASSWORD: $config_concourse_password
      CONCOURSE_EXTERNAL_URL: "\${CONCOURSE_EXTERNAL_URL}"
      CONCOURSE_POSTGRES_DATA_SOURCE: |-
        postgres://concourse:changeme@concourse-db:5432/concourse?sslmode=disable

  concourse-worker:
    image: concourse/concourse
    privileged: true
    links: [concourse-web,minio]
    command: worker
    volumes: ["$CONCOURSE_HOME/keys/worker:/concourse-keys"]
    restart: unless-stopped
    environment:
      CONCOURSE_TSA_HOST: concourse-web

  #
  # Minio provides an S3 storage back-end for automation jobs
  # to be able to persist temporary data between jobs in a 
  # pipeline via the concourse s3 resource type.
  #

  minio:
    image: minio/minio
    command: server /data
    volumes: ["$CONCOURSE_HOME/objectstore:/data"]
    restart: unless-stopped
    environment:
      MINIO_ACCESS_KEY: $autos3_access_key
      MINIO_SECRET_KEY: $autos3_secret_key

---EOF

ssh-keygen -t rsa -f $CONCOURSE_HOME/keys/web/tsa_host_key -N ''
ssh-keygen -t rsa -f $CONCOURSE_HOME/keys/web/session_signing_key -N ''

ssh-keygen -t rsa -f $CONCOURSE_HOME/keys/worker/worker_key -N ''

cp $CONCOURSE_HOME/keys/worker/worker_key.pub $CONCOURSE_HOME/keys/web/authorized_worker_keys
cp $CONCOURSE_HOME/keys/web/tsa_host_key.pub $CONCOURSE_HOME/keys/worker

chown -R concourse:docker $CONCOURSE_HOME

if [[ $(echo "$config_concourse_port" | sed -e 's|^[0-9]*|xx|') == xx ]]; then
    CONCOURSE_URL=http://127.0.0.1:$config_concourse_port
else
    CONCOURSE_URL=http://$config_concourse_port
fi

sudo -S -u concourse /bin/sh -l <<EOF
cd $CONCOURSE_HOME/docker
export CONCOURSE_EXTERNAL_URL=$CONCOURSE_URL
docker-compose down --rmi all
docker-compose up -d --force-recreate
EOF

i=0
curl -f -L "$CONCOURSE_URL/api/v1/cli?arch=amd64&platform=linux" \
    -o /usr/local/bin/fly >/dev/null 2>&1
while [[ $? -ne 0 && $i -lt 12 ]]; do
    
    i=$(($i+1))
    echo "Waiting for Concourse to startup..."
    sleep 5

    curl -f -L "$CONCOURSE_URL/api/v1/cli?arch=amd64&platform=linux" \
        -o /usr/local/bin/fly >/dev/null 2>&1
done
if [[ $? -ne 0 ]]; then 
    echo "ERROR! Concourse is still not running after 60 seconds."
    exit 1
fi

chmod +x /usr/local/bin/fly

echo -e "\nconcourse_url: http://concourse-web:8080" >> /root/bootstrap-vars.yml
echo -e "concourse_user: admin" >> /root/bootstrap-vars.yml
echo -e "concourse_password: $config_concourse_password" >> /root/bootstrap-vars.yml

echo -e "\nautos3_url: http://minio:9000" >> /root/bootstrap-vars.yml
echo -e "autos3_access_key: $autos3_access_key" >> /root/bootstrap-vars.yml
echo -e "autos3_secret_key: $autos3_secret_key" >> /root/bootstrap-vars.yml

sudo -i -- fly --target default login --insecure \
    --concourse-url $CONCOURSE_URL \
    --username=admin \
    --password=$config_concourse_password \
    --team-name=main

s=$(head -1 /root/bootstrap.yml)
if [[ $s == "---" ]]; then
    sudo -i -- fly --target default set-pipeline -n -p bootstrap \
        -c /root/bootstrap.yml -l /root/bootstrap-vars.yml
    sudo -i -- fly --target default unpause-pipeline -p bootstrap
fi

touch /root/.concourse_installed
