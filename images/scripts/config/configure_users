#!/bin/bash

set -exo pipefail

SCRIPT_HOME=$(cd $(dirname "$(ls -l $0 | awk '{ print $NF }')") && pwd)
source $SCRIPT_HOME/common

[[ ! -e /root/.users_installed ]] || exit 0

#
# Configure Users and SSH Access
#

if [[ -e /data/users/etc ]]; then
  cp -r /data/users/etc/* /etc
else
  mkdir -p /data/users/home
  mkdir -p /data/users/etc
  mkdir -p /data/users/etc/ssh
fi

if [[ -n "$config_server_admin_passwd" ]]; then

  admin_user=${config_server_admin_user:-admin}
  admin_password=$(mkpasswd "$config_server_admin_passwd")
  user_home=/data/users/home/$admin_user

  set +e
  id $admin_user >/dev/null 2>&1
  if [[ $? -ne 0 ]]; then
    useradd $admin_user -p $admin_password -m -d $user_home -s /bin/bash
  else
    usermod $admin_user -p $admin_password -m -d $user_home -s /bin/bash
  fi
  adduser $admin_user sudo

  mkdir -p $user_home/.ssh
  echo "$config_server_admin_ssh_public_key" \
    > $user_home/.ssh/authorized_keys
  
  chmod 0700 $user_home/.ssh
  chmod 0600 $user_home/.ssh/authorized_keys

  chown -R $admin_user:$admin_user $user_home

  # Remove any overrides that may 
  # allow passwordless sudos
  rm -fr /etc/sudoers.d/*
  sed -i 's|%sudo ALL=(ALL:ALL) NOPASSWD:ALL|%sudo ALL=(ALL:ALL) ALL|' /etc/sudoers
  
  set -e
  [[ -n "$config_server_admin_ssh_port" ]] && \
    sed -i "s|^Port [0-9]*$|Port $config_server_admin_ssh_port|" /etc/ssh/sshd_config

  service sshd restart
fi

# Fix to remove "mesg: ttyname failed: Inappropriate ioctl for device" 
# from output when executing commands with 'sudo -i'
sed -i 's/^mesg n || true$/tty -s \&\& mesg n/' /root/.profile

set +ex
touch /root/.users_installed
