#!/bin/bash

set -exo pipefail

SCRIPT_HOME=$(cd $(dirname "$(ls -l $0 | awk '{ print $NF }')") && pwd)
source $SCRIPT_HOME/common

[[ ! -e /usr/local/etc/.apache_installed ]] || exit 0

#
# Configure server certificates
#

if [[ $config_server_certify_bastion == "yes" ]]; then

  mkdir -p /etc/letsencrypt

  cat << ---EOF > /etc/letsencrypt/cli.ini
rsa-key-size = 4096
pre-hook = /sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT
post-hook = /sbin/iptables -D INPUT -p tcp --dport 80 -j ACCEPT
renew-hook = /usr/sbin/ipsec reload && /usr/sbin/ipsec secrets
---EOF

  if [[ ! -e /data/letsencrypt/archive/${config_server_fqdn} ]]; then
    certbot certonly \
      --non-interactive \
      --agree-tos \
      --standalone \
      --preferred-challenges http \
      --email ${config_server_admin_user}@${config_server_fqdn} \
      -d $config_server_fqdn

    ln -f -s \
      /etc/letsencrypt/live/${config_server_fqdn}/cert.pem \
      /etc/ssl/certs/bastion_cert.pem
    ln -f -s \
      /etc/letsencrypt/live/${config_server_fqdn}/privkey.pem \
      /etc/ssl/private/bastion_key.pem
    ln -f -s \
      /etc/letsencrypt/live/${config_server_fqdn}/chain.pem \
      /etc/ssl/certs/bastion_chain.pem

    # Backup letsencrypt
    mkdir -p /data/letsencrypt
    cp -r /etc/letsencrypt /data/letsencrypt/etc
  else
    # Restore letsencrypt
    cp -r /data/letsencrypt/etc/* /etc/letsencrypt/
  fi

# Enable once AppArmor is configured on the bastion hosts
#
#   cat << ---EOF > /etc/apparmor.d/local/usr.lib.ipsec.charon
# /etc/letsencrypt/archive/${config_server_fqdn}/* r,
# ---EOF

#   aa-status --enabled && invoke-rc.d apparmor reload

elif [[ -e /etc/ssl/certs/bastion_ca.pem ]]; then
  cp /etc/ssl/certs/bastion_ca.pem /etc/ssl/certs/bastion_chain.pem
else
  echo "ERROR! Unable to retrieve server certificates"
fi

#
# Configure Apache2 Web Serve
#

APACHE_USER_CONFIG=/data/users/etc/apache2
mkdir -p $APACHE_USER_CONFIG

web_server_http_port=${config_webserver_http_port:-80}
web_server_https_port=${config_webserver_https_port:-443}

sed -i "s|Listen 80\$|Listen $web_server_http_port|g" /etc/apache2/ports.conf
sed -i "s|Listen 443\$|Listen $web_server_https_port|g" /etc/apache2/ports.conf

# Use the fully qualified name
# of the host instead of host ip.
[[ $config_server_use_fqdn == "true" ]] && \
  config_server_host=$config_server_fqdn

if [[ $web_server_https_port == 443 ]]; then
  redirect_https=https://$config_server_host/
else
  redirect_https=https://$config_server_host:$web_server_https_port/
fi

cat << ---EOF > /etc/apache2/sites-available/bastion-web.conf
<VirtualHost *:$web_server_http_port>
ServerName $config_server_host
Redirect permanent / $redirect_https
</VirtualHost>

<VirtualHost *:$web_server_https_port>
ServerName $config_server_host
DocumentRoot /var/www/html

ErrorDocument 500 /error50x.html
ErrorDocument 501 /error50x.html
ErrorDocument 502 /error50x.html
ErrorDocument 503 /error50x.html
ErrorDocument 504 /error50x.html
ErrorDocument 505 /error50x.html

ErrorDocument 400 /error40x.html
ErrorDocument 401 /error40x.html
ErrorDocument 402 /error40x.html
ErrorDocument 403 /error40x.html
ErrorDocument 404 /error40x.html
ErrorDocument 405 /error40x.html
ErrorDocument 406 /error40x.html

SSLEngine on
SSLCertificateFile /etc/ssl/certs/bastion_cert.pem
SSLCertificateKeyFile /etc/ssl/private/bastion_key.pem
SSLCertificateChainFile /etc/ssl/certs/bastion_chain.pem

<IfModule mod_authnz_external.c>
AddExternalAuth pwauth /usr/sbin/pwauth
SetExternalAuthMethod pwauth pipe
</IfModule>

# Bastion Users
UserDir "/data/users/home/*"  
IncludeOptional "$APACHE_USER_CONFIG/*.conf"

</VirtualHost>
---EOF

pushd /etc/apache2/mods-enabled
[[ -e userdir.load ]] || ln -s ../mods-available/userdir.load userdir.load
[[ -e authnz_external.load ]] || ln -s ../mods-available/authnz_external.load authnz_external.load
[[ -e socache_shmcb.load ]] || ln -s ../mods-available//socache_shmcb.load socache_shmcb.load
[[ -e ssl.load ]] || ln -s ../mods-available/ssl.load ssl.load
[[ -e ssl.conf ]] || ln -s ../mods-available/ssl.conf ssl.conf
popd

pushd /etc/apache2/sites-enabled
rm -f *
ln -s ../sites-available/bastion-web.conf bastion-web.conf
popd

systemctl enable apache2
systemctl start apache2

set +ex
touch /usr/local/etc/.apache_installed
